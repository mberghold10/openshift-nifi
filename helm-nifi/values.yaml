# Default values for helm-nifi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # Docker image repository
  # Bronze
  repository: "{{ requiredEnv "CONTAINER_REGISTRY" }}/hyp-gui-docker-latest/{{ requiredEnv "CI_PROJECT_NAME" }}"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "{{ requiredEnv "CI_COMMIT_SHORT_SHA" }}"

#imagePullSecrets: []
#nameOverride: ""
#fullnameOverride: ""

serviceAccount:
  # Specifies whether service account(s) should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  #automount: true
  # Annotations to add to the service account
  #annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  #name: ""

#podAnnotations: {}
#podLabels: {}

#podSecurityContext: {}
  # fsGroup: 2000

#securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80 #Check port number

ingress:
  enabled: true
  #createIngress: true
  #path: /
  #className: ""
  #createRoute: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

encryptionSecrets: "nifi-high-to-low"
signingSecrets: "hyperion-nifi"

#servicemesh:
  #enabled: false
#servicemeshlow:
  #enabled: true

#aws:
  #host: ssjdjdjjdjdj
  #bucketOne: sdfsdfsdf
  #bucketTwo: sdfsdfsdfsdf

#resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#livenessProbe:
  #httpGet:
    #path: /
    #port: http
#readinessProbe:
  #httpGet:
    #path: /
    #port: http

#autoscaling:
  #enabled: false
  #minReplicas: 1
  #maxReplicas: 100
  #targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
#volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
#volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

#nodeSelector: {}

#tolerations: []

#affinity: {}

envVars:
 - name: NODE_TLS_REJECT_UNAUTHORIZED
   value: "0"
 - name: volante_Crypto_signEnabled
   value: "false"
 - name: volante_Crypto_cryptoEnabled
   value: "false"
 - name: volante_Crypto_keyFolder
   value: /etc/portal-tmp
 - name: volante_Crypto_signingPublicKey
   value: Hyperion.crt
 - name: volante_Crypto_signingPrivateKey
   value: Hyperion.pem
 - name: volante_Crypto_signingPrivateKeyPassphrase
   value: pass
 - name: volante_Crypto_cryptoPublicKeyUUID
   value: 3d66222c-ebc0-4493-854d-d37600f235a5
 - name: volante_Crypto_cryptoPrivateKeyUUID
   value: 45432855-a822-4848-a24e-15474c7686d1
 - name: volante_CdsPlugin_cdsBroker
   value: "AwsS3"
 - name: volante_Manager_inboundObjStore
   value: "portal02"
 - name: volante_Manager_outboundObjStore
   value: "portal01"
 - name: CI_VERSION
   value: "{{ requiredEnv "CI_VERSION" }}"
 - name: S3_access_key
   value: sldkfslkdfjslkdjflskdjflskjdfsdljf
- name: S3_secret_key
   value: sldkfslkdfjslkdjflskdjflskjdfsdljf/sdfsdfsdf
- name: S3_region
   value: us-east-2
- name: DITUurl
   value: www.ditu.com